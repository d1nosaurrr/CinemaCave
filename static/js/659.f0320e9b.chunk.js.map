{"version":3,"file":"static/js/659.f0320e9b.chunk.js","mappings":"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","sources":["components/MovieListItem/index.js","components/MovieList/index.js","components/AsideFilter/index.js","components/Pagination/index.js","components/Wrapper/index.js"],"sourcesContent":["import {Link} from 'react-router-dom';\n\nexport default function MovieListItem({props}) {\n    return (\n        <>\n            <li className='movie__item br-15 p-relative draw-border'>\n                <Link to={`/movie/${props.id}`} className='d-flex br-15 item__card'>\n                    <img\n                        src={`https://image.tmdb.org/t/p/original/${props.poster_path}`}\n                        alt={props.original_title + ' poster'}\n                        className='f-width br-15 card__logo skeleton'\n                        width='140'\n                        height='200'\n                        loading='lazy'\n                    />\n                    <div className='f-width d-flex br-15 card__description'>\n                        <p className='card__title'>{props.title}</p>\n                        <p className='d-flex card__score'>\n                            {props.release_date ? (new Date(props.release_date)).getFullYear() : 'N/A'}\n                            <span className='rate'>{props.vote_average}</span>\n                        </p>\n                    </div>\n                </Link>\n            </li>\n        </>\n    )\n}","import Index from '../MovieListItem';\nimport PageNotFound from '../../pages/PageNotFound';\nimport Loader from '../Loader';\nimport {useSelector} from 'react-redux';\n\nexport default function MovieList({list}) {\n    const {isLoading, isError, error} = useSelector(({movies}) => movies);\n    if (isError && error) return <PageNotFound/>\n\n    const renderMovies = (arr) => <ul className='movies__list'>\n        {arr.map(e => <Index key={e.id} props={e}/>)}\n    </ul>;\n\n    return (\n        <>\n            {isLoading ? <Loader/> :\n                list && list.length > 0 ? renderMovies(list) :\n                    <p className='f-width f-height list__empty'>No movie found</p>\n            }\n        </>\n    )\n}","import {useSelector} from 'react-redux';\nimport React, {useRef, useState} from 'react';\nimport {useSearchParams} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faFilter} from '@fortawesome/free-solid-svg-icons';\n\nexport default function AsideFilter({handleFilter, flag}) {\n    const [searchParams] = useSearchParams();\n    const years = useRef([]);\n    const [isAsideActive, setIsAsideActive] = useState(false);\n    const [activeFilter, setActiveFilter] = useState(\n        {\n            genre: searchParams.getAll('genre') || [],\n            year: searchParams.get('year') || 'all',\n            sort: searchParams.get('sort') || 'popularity.desc',\n        }\n    );\n\n    let genreList = useSelector(({genres}) => genres.genreList);\n\n    const toggleMenu = () => {\n        setIsAsideActive(prevValue => !prevValue);\n    }\n\n    const handleToggleGenre = (id) => {\n        setActiveFilter((prevState) => ({\n            ...prevState,\n            genre: !activeFilter.genre.includes(id) ?\n                [...prevState.genre, id] : prevState.genre.filter(item => item !== id),\n\n        }));\n    };\n\n    (() => {\n        const currentYears = new Date().getFullYear();\n        const elList = [<option name='all' value='all' id='check-all' key='all'>All</option>]\n        for (let index = currentYears; index >= currentYears - 15; index--) {\n            elList.push(<option name={index} value={index} id={index} key={index}>{index}</option>)\n        }\n        years.current = elList\n    })();\n\n    return (\n        <>\n            <div onClick={toggleMenu} className={`d-flex menu__toggle ${isAsideActive ? 'active' : ''}`}>\n                <span className='line line1'></span>\n                <span className='line line2'></span>\n                <span className='line line3'></span>\n            </div>\n            <aside className={`aside ${isAsideActive ? 'active' : ''}`}>\n\n                <FontAwesomeIcon\n                    onClick={() => {\n                        setIsAsideActive(false);\n                        handleFilter(activeFilter);\n                        flag(() => false)\n                    }}\n                    className='br-15 movie__filter' icon={faFilter}/>\n\n                <select\n                    defaultValue={activeFilter.sort}\n                    className='br-15 select movie_popularity'\n                    onChange={({target}) => activeFilter.sort = target.value}\n                    name='sort'>\n                    <option value='popularity.desc'>More popular</option>\n                    <option value='popularity.asc'>Less popular</option>\n                    <option value='primary_release_date.desc'>Newer</option>\n                    <option value='primary_release_date.asc'>Older</option>\n                </select>\n                <select\n                    onChange={({target}) => activeFilter.year = target.value}\n                    className='br-15 select movie__years'\n                    defaultValue={activeFilter.year}\n                >\n                    {years.current}\n                </select>\n                <ul className='d-flex movie__categories categories'>\n                    {genreList.map(({id, name}) => <li\n                        onClick={() => handleToggleGenre(id.toString())}\n                        className={`br-15 categories__item ${activeFilter.genre.includes(id.toString()) ? 'active' : ''}`}\n                        key={id}>{name}</li>)}\n                </ul>\n            </aside>\n        </>\n    )\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\n\nexport default function Pagination({handler, currPage, totalPages}) {\n    const handlePagination = (pageNum) => {\n        if (pageNum < 1 || pageNum > totalPages) return;\n        handler({'page': pageNum});\n    };\n\n    return (\n        <div className='d-flex pagination'>\n            <FontAwesomeIcon className='pagination__arrow'\n                             onClick={() => handlePagination(currPage - 1)}\n                             icon={faArrowLeft}/>\n            <span className='pagination__page'>{currPage}</span>\n            <FontAwesomeIcon className='pagination__arrow'\n                             onClick={() => handlePagination(currPage + 1)}\n                             icon={faArrowRight}/>\n        </div>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport AsideFilter from '../AsideFilter';\nimport MovieList from '../MovieList';\nimport {useSearchParams} from 'react-router-dom';\nimport {fetchFilterMovie, fetchMovieByQuery} from \"../../state/actions/movieList\";\nimport Pagination from \"../Pagination\";\n\nexport default function Wrapper() {\n    const dispatch = useDispatch();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const {movieList, page} = useSelector(({movies}) => movies);\n    const {currPage, totalPages} = page;\n    const [flag, setFlag] = useState(true);\n    const [filterValue, setFilterValue] = useState({\n        genre: searchParams.getAll('genre') || [],\n        year: searchParams.get('year') || 'all',\n        sort: searchParams.get('sort') || 'popularity.desc',\n        page: parseInt(searchParams.get('page') || '1'),\n    });\n    useEffect(() => {\n        window.scrollTo({top: 0, behavior: 'smooth'});\n\n        if (!flag) {\n            searchParams.set('query', filterValue.query)\n            searchParams.set('page', filterValue.page)\n\n            setSearchParams(searchParams);\n            dispatch(fetchMovieByQuery(filterValue.query, true, filterValue.page));\n        } else {\n            setSearchParams({...filterValue});\n            dispatch(fetchFilterMovie({...filterValue}));\n            setFlag(() => true);\n        }\n    }, [filterValue])\n\n    const handleFilter = (data) => {\n        setFilterValue(prevValue => ({...prevValue, ...data}));\n    };\n    return (\n        <div className='wrapper'>\n            <MovieList list={movieList}/>\n            <AsideFilter handleFilter={handleFilter} flag={setFlag}/>\n            <Pagination handler={handleFilter} currPage={currPage} totalPages={totalPages}/>\n        </div>\n    );\n}"],"names":["MovieListItem","_ref","props","_jsx","_Fragment","children","className","_jsxs","Link","to","concat","id","src","poster_path","alt","original_title","width","height","loading","title","release_date","Date","getFullYear","vote_average","MovieList","list","_useSelector","useSelector","_ref2","movies","isLoading","isError","error","PageNotFound","arr","Loader","length","map","e","Index","AsideFilter","handleFilter","flag","_useSearchParams","useSearchParams","searchParams","_slicedToArray","years","useRef","_useState","useState","_useState2","isAsideActive","setIsAsideActive","_useState3","genre","getAll","year","get","sort","_useState4","activeFilter","setActiveFilter","genreList","genres","currentYears","elList","name","value","index","push","current","onClick","prevValue","FontAwesomeIcon","icon","faFilter","defaultValue","onChange","_ref3","target","_ref4","_ref5","prevState","_objectSpread","includes","filter","item","_toConsumableArray","handleToggleGenre","toString","Pagination","handler","currPage","totalPages","handlePagination","pageNum","faArrowLeft","faArrowRight","Wrapper","dispatch","useDispatch","_useSearchParams2","setSearchParams","movieList","page","setFlag","parseInt","filterValue","setFilterValue","useEffect","window","scrollTo","top","behavior","fetchFilterMovie","set","query","fetchMovieByQuery","data"],"sourceRoot":""}