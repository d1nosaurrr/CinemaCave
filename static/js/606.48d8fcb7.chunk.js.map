{"version":3,"file":"static/js/606.48d8fcb7.chunk.js","mappings":"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","sources":["pages/AsideFilter/index.js","components/Wrapper/index.js","components/MovieListItem/index.js","pages/MovieList/index.js"],"sourcesContent":["import {useSelector} from 'react-redux';\nimport React, {useRef, useState} from 'react';\nimport {useSearchParams} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faFilter} from '@fortawesome/free-solid-svg-icons';\n\nexport default function AsideFilter({handleFilter}) {\n    const [searchParams] = useSearchParams();\n    const years = useRef([]);\n    const [isAsideActive, setIsAsideActive] = useState(false);\n\n    const [activeFilter, setActiveFilter] = useState(\n        {\n            genre: searchParams.getAll('genre') || '',\n            year: searchParams.get('year') || '',\n            sort: searchParams.get('sort') || '',\n        }\n    );\n    let genre = useSelector(({genres}) => genres.genreList);\n\n    const handleToggleGenre = (id) => {\n        setActiveFilter((prevState) => ({\n            ...prevState,\n            genre: !activeFilter.genre.includes(id) ?\n                [...prevState.genre, id] : prevState.genre.filter(item => item !== id),\n\n        }));\n    };\n\n    (() => {\n        const currentYears = new Date().getFullYear();\n        const elList = [<option name='all' value='' id='check-all' key='all'>All</option>]\n        for (let index = currentYears; index >= currentYears - 15; index--) {\n            elList.push(<option name={index} value={index} id={index} key={index}>{index}</option>)\n        }\n        years.current = elList\n    })();\n\n    const toggleMenu = () => {\n        setIsAsideActive(prevValue => !prevValue);\n    }\n    return (\n        <>\n            <div onClick={toggleMenu} className={`d-flex menu__toggle ${isAsideActive ? 'active' : ''}`}>\n                <span className='line line1'></span>\n                <span className='line line2'></span>\n                <span className='line line3'></span>\n            </div>\n            <aside className={`aside ${isAsideActive ? 'active' : ''}`}>\n\n                <FontAwesomeIcon\n                    onClick={() => {\n                        setIsAsideActive(false);\n                        handleFilter(activeFilter)\n                    }}\n                    className='br-15 movie__filter' icon={faFilter}/>\n\n                <select\n                    defaultValue='popularity.desc'\n                    className='br-15 select movie_popularity'\n                    onChange={({target}) => activeFilter.sort = target.value}\n                    name='sort'>\n                    <option value='popularity.desc'>More popular</option>\n                    <option value='popularity.asc'>Less popular</option>\n                    <option value='primary_release_date.desc'>Newer</option>\n                    <option value='primary_release_date.asc'>Older</option>\n                </select>\n                <select\n                    onChange={({target}) => activeFilter.year = target.value}\n                    className='br-15 select movie__years'\n                    defaultValue={activeFilter.year}\n                >\n                    {years.current}\n                </select>\n                <ul className='d-flex movie__categories categories'>\n                    {genre.map(({id, name}) => <li\n                        onClick={() => handleToggleGenre(id.toString())}\n                        className={`br-15 categories__item ${activeFilter.genre.includes(id.toString()) ? 'active' : ''}`}\n                        key={id}>{name}</li>)}\n                </ul>\n            </aside>\n        </>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport AsideFilter from '../../pages/AsideFilter';\nimport MovieList from '../../pages/MovieList';\nimport {fetchFilterMovie, fetchMovieByQuery} from '../../state/actions/movieList';\nimport {useSearchParams} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowLeft, faArrowRight} from '@fortawesome/free-solid-svg-icons';\n\nexport default function Wrapper() {\n    const {page} = useSelector(({movies}) => movies)\n    const dispatch = useDispatch();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [filterValue, setFilterValue] = useState({\n        genre: [],\n        year: '',\n        sort: '',\n        page: parseInt(searchParams.get('page') || 1),\n    });\n    const {movieList} = useSelector(({movies}) => movies);\n\n    const handleFilter = (data) => {\n        setFilterValue({...data});\n    };\n    useEffect(() => {\n        window.scrollTo({top: 0, behavior: 'smooth'});\n        if (searchParams.get('query')) {\n            const query = searchParams.get('query');\n            setSearchParams(`&query=${query}&page=${filterValue.page}`);\n\n            dispatch(fetchMovieByQuery(query, true, filterValue.page));\n        } else {\n            setSearchParams({...filterValue});\n            dispatch(fetchFilterMovie({...filterValue}));\n        }\n    }, [filterValue])\n\n    const handlePagination = (pageNum) => {\n        if (pageNum < 1 || pageNum > page.totalPages) return;\n        setFilterValue(prevValue => ({\n            ...prevValue,\n            page: pageNum\n        }));\n    };\n    return (\n        <div className='wrapper'>\n            <MovieList list={movieList}/>\n            <AsideFilter handleFilter={handleFilter}/>\n            <div className='wrapper_fixed'>\n                <div className='d-flex pagination'>\n                    <FontAwesomeIcon className='pagination__arrow'\n                                     onClick={() => handlePagination(page.currPage - 1)}\n                                     icon={faArrowLeft}/>\n                    <span className='pagination__page'>{page.currPage}</span>\n                    <FontAwesomeIcon className='pagination__arrow'\n                                     onClick={() => handlePagination(page.currPage + 1)}\n                                     icon={faArrowRight}/>\n                </div>\n            </div>\n        </div>\n    );\n}","import {Link} from 'react-router-dom';\n\nexport default function Index({props}) {\n    return (\n        <>\n            <li className='movie__item br-15 p-relative draw-border'>\n                <Link to={`/movie/${props.id}`} className='d-flex br-15 item__card'>\n                    <img\n                        src={`https://image.tmdb.org/t/p/original/${props.poster_path}`}\n                        alt={props.original_title + ' poster'}\n                        className='f-width br-15 card__logo'\n                        width='140'\n                        height='200'\n                        loading='lazy'\n                    />\n                    <div className='f-width d-flex br-15 card__description'>\n                        <p className='card__title'>{props.title}</p>\n                        <p className='d-flex card__score'>\n                            {props.release_date ? (new Date(props.release_date)).getFullYear() : 'N/A'}\n                            <span className='rate'>{props.vote_average}</span>\n                        </p>\n                    </div>\n                </Link>\n            </li>\n        </>\n    )\n}","import Index from '../../components/MovieListItem';\nimport PageNotFound from '../PageNotFound';\nimport Loader from '../../components/Loader';\nimport {useSelector} from 'react-redux';\n\nexport default function MovieList({list}) {\n    const {isLoading, isError, error} = useSelector(({movies}) => movies);\n    if (isError && error) return <PageNotFound/>\n\n    const renderMovies = (arr) => <ul className='movies__list'>\n        {arr.map(e => <Index key={e.id} props={e}/>)}\n    </ul>;\n\n    return (\n        <>\n            {isLoading ? <Loader/> :\n                list && list.length > 0 ? renderMovies(list) :\n                    <p className='f-width f-height list__empty'>No movie found</p>\n            }\n        </>\n    )\n}"],"names":["AsideFilter","_ref","handleFilter","_useSearchParams","useSearchParams","searchParams","_slicedToArray","years","useRef","_useState","useState","_useState2","isAsideActive","setIsAsideActive","_useState3","genre","getAll","year","get","sort","_useState4","activeFilter","setActiveFilter","useSelector","_ref2","genres","genreList","currentYears","Date","getFullYear","elList","_jsx","name","value","id","children","index","push","current","_jsxs","_Fragment","onClick","prevValue","className","concat","FontAwesomeIcon","icon","faFilter","defaultValue","onChange","_ref3","target","_ref4","map","_ref5","prevState","_objectSpread","includes","filter","item","_toConsumableArray","handleToggleGenre","toString","Wrapper","page","movies","dispatch","useDispatch","_useSearchParams2","setSearchParams","parseInt","filterValue","setFilterValue","movieList","useEffect","window","scrollTo","top","behavior","query","fetchMovieByQuery","fetchFilterMovie","handlePagination","pageNum","totalPages","MovieList","list","data","currPage","faArrowLeft","faArrowRight","Index","props","Link","to","src","poster_path","alt","original_title","width","height","loading","title","release_date","vote_average","_useSelector","isLoading","isError","error","PageNotFound","arr","Loader","length","e"],"sourceRoot":""}