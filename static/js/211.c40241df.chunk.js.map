{"version":3,"file":"static/js/211.c40241df.chunk.js","mappings":"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","sources":["pages/MovieInfo/index.js","components/MovieListItem/index.js","pages/MovieList/index.js"],"sourcesContent":["import {useNavigate, useParams} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport React, {useEffect} from 'react';\nimport Loader from '../../components/Loader';\nimport {fetchMovieInfo, fetchSimilarMovie} from '../../state/actions/movieList';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowLeft} from '@fortawesome/free-solid-svg-icons';\nimport {fetchMovieImages} from '../../state/actions/movieImages';\nimport MovieList from '../MovieList';\n\nexport default function MovieInfo() {\n    const dispatch = useDispatch();\n    const {id} = useParams()\n    const navigate = useNavigate();\n\n    const {movieInfo, movieSimilar, isLoading} = useSelector(({movies}) => movies);\n    const images = useSelector(({images}) => images.movieImages);\n    const padTo2Digits = (num) => num.toString().padStart(2, '0');\n\n    const toHourConverter = (minutes) => !isNaN(minutes) ? `${padTo2Digits(Math.floor(minutes / 60))} : ${padTo2Digits(Math.round(minutes % 60))}` : 'N/A';\n\n    useEffect(() => {\n        dispatch(fetchMovieInfo(id))\n        dispatch(fetchMovieImages(id))\n        dispatch(fetchSimilarMovie(id))\n    }, [dispatch, id]);\n    const {\n        title,\n        original_title,\n        poster_path,\n        release_date,\n        production_countries,\n        production_companies,\n        runtime,\n        overview,\n        vote_average,\n        vote_count\n    } = movieInfo;\n\n    return <>\n        {isLoading ?\n            <Loader/>\n            :\n            Object.keys(movieInfo).length > 0 && Object.keys(images).length > 0 &&\n            <section className='movie__info'>\n                <FontAwesomeIcon className='back__arrow' onClick={() => navigate(-1)} icon={faArrowLeft}/>\n                <div className='d-flex info__header'>\n\n                    <div className='title__block'>\n                        <h2 className='movie__title'>{title}</h2>\n                        <h3 className='movie__title-original'>{original_title}</h3>\n                    </div>\n                    <div className='d-flex p-relative rating'>\n                        <div className='p-relative stars-outer'>\n                            <div className='stars-inner' style={{\n                                width: `${\n                                    Math.round(((vote_average / 10) * 100))}%`\n                            }}></div>\n                        </div>\n\n                        <p className='rating__vote'>Rate{vote_average}({vote_count})</p>\n\n                    </div>\n                </div>\n\n                <div className='d-flex info__body'>\n                    <img\n                        src={'https://image.tmdb.org/t/p/original/' + poster_path}\n                        alt={original_title + ' poster'}\n                        className='info__logo'\n                        width='240'\n                        height='350'\n                    />\n                    <ul className='production__info'>\n                        <li className='f-width p-relative info__item'>\n                            <span className='item__title'>Release date (US): </span>{release_date}\n\n                        </li>\n                        <li className='f-width p-relative info__item'>\n                            <span className='item__title'>Country: </span>\n                            {production_countries.map(({name}) => name).join(', ')}\n                        </li>\n                        <li className='f-width p-relative info__item'>\n                            <span className='item__title'>Companies: </span>\n                            {production_companies.map(({name}) => name).join(', ')}\n                        </li>\n                        <li className='f-width p-relative info__item'>\n                            <span className='item__title'>Runtime: </span>\n                            {`${runtime || 'N/A'} minutes (${toHourConverter(runtime || 'N/A')})`}\n                        </li>\n\n                        <li className='f-width p-relative info__item'>\n                            <span className='item__title'>Overview: </span>\n                            {overview || 'N/A'}\n                        </li>\n                        <li className='f-width p-relative info__item'>\n                            <ul\n                                className='d-flex br-15 movie__preview'\n                                onWheel={(e) => {\n                                    e.preventDefault();\n                                    document.querySelector('.movie__preview').scrollLeft += e.deltaY + e.deltaX;\n                                }}>\n                                {images.backdrops.slice(0, 7).map(({file_path}) =>\n                                    <li key={file_path} className='preview__item'>\n                                        <img\n                                            src={'https://image.tmdb.org/t/p/original/' + file_path}\n                                            alt={original_title + ' img'}\n                                            className='preview__img'\n                                            width='220'\n                                            height='250'\n                                            loading='lazy'\n                                            onClick={() => {\n                                                document.querySelector('#fullpage').style.backgroundImage =\n                                                    `url(https://image.tmdb.org/t/p/original/${file_path})`;\n                                                document.querySelector('#fullpage').style.display = 'block';\n                                            }}\n                                        />\n                                    </li>)}\n\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n                <svg style={{display: 'none'}}>\n                    <defs>\n                        <symbol id='fivestars'>\n                            <path\n                                d='M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z M0 0 h24 v24 h-24 v-24'\n                                fillRule='evenodd'/>\n                            <path\n                                d='M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z M0 0 h24 v24 h-24 v-24'\n                                fillRule='evenodd' transform='translate(24)'/>\n                            <path\n                                d='M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z M0 0 h24 v24 h-24 v-24'\n                                fillRule='evenodd' transform='translate(48)'/>\n                            <path\n                                d='M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z M0 0 h24 v24 h-24 v-24'\n                                fillRule='evenodd' transform='translate(72)'/>\n                            <path\n                                d='M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z M0 0 h24 v24 h-24 v-24'\n                                fillRule='evenodd' transform='translate(96)'/>\n                        </symbol>\n                    </defs>\n                </svg>\n                <div className='movie__similar'>\n                    <span className='movie-similar__title'>Recommends</span>\n                    <MovieList list={movieSimilar}/>\n                </div>\n            </section>\n        }\n    </>\n}","import {Link} from 'react-router-dom';\n\nexport default function Index({props}) {\n    return (\n        <>\n            <li className='movie__item br-15 p-relative draw-border'>\n                <Link to={`/movie/${props.id}`} className='d-flex br-15 item__card'>\n                    <img\n                        src={`https://image.tmdb.org/t/p/original/${props.poster_path}`}\n                        alt={props.original_title + ' poster'}\n                        className='f-width br-15 card__logo'\n                        width='140'\n                        height='200'\n                        loading='lazy'\n                    />\n                    <div className='f-width d-flex br-15 card__description'>\n                        <p className='card__title'>{props.title}</p>\n                        <p className='d-flex card__score'>\n                            {props.release_date ? (new Date(props.release_date)).getFullYear() : 'N/A'}\n                            <span className='rate'>{props.vote_average}</span>\n                        </p>\n                    </div>\n                </Link>\n            </li>\n        </>\n    )\n}","import Index from '../../components/MovieListItem';\nimport PageNotFound from '../PageNotFound';\nimport Loader from '../../components/Loader';\nimport {useSelector} from 'react-redux';\n\nexport default function MovieList({list}) {\n    const {isLoading, isError, error} = useSelector(({movies}) => movies);\n    if (isError && error) return <PageNotFound/>\n\n    const renderMovies = (arr) => <ul className='movies__list'>\n        {arr.map(e => <Index key={e.id} props={e}/>)}\n    </ul>;\n\n    return (\n        <>\n            {isLoading ? <Loader/> :\n                list && list.length > 0 ? renderMovies(list) :\n                    <p className='f-width f-height list__empty'>No movie found</p>\n            }\n        </>\n    )\n}"],"names":["MovieInfo","dispatch","useDispatch","id","useParams","navigate","useNavigate","_useSelector","useSelector","_ref","movies","movieInfo","movieSimilar","isLoading","images","_ref2","movieImages","padTo2Digits","num","toString","padStart","useEffect","fetchMovieInfo","fetchMovieImages","fetchSimilarMovie","minutes","title","original_title","poster_path","release_date","production_countries","production_companies","runtime","overview","vote_average","vote_count","_jsx","_Fragment","children","Loader","Object","keys","length","_jsxs","className","FontAwesomeIcon","onClick","icon","faArrowLeft","style","width","concat","Math","round","src","alt","height","map","_ref3","name","join","_ref4","isNaN","floor","onWheel","e","preventDefault","document","querySelector","scrollLeft","deltaY","deltaX","backdrops","slice","_ref5","file_path","loading","backgroundImage","display","d","fillRule","transform","MovieList","list","Index","props","Link","to","Date","getFullYear","isError","error","PageNotFound","arr"],"sourceRoot":""}